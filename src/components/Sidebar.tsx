import RadialProgress from "@/components/RadialProgress";
import Button from "./Button";
import LoadingSpinner from "./LoadingSpinner";

type Category = {
  name: string;
  percent: number;
  color: "red" | "green" | "blue" | "purple";
};

type SidebarProps = {
  percentGenerated?: number;
  formalityRating?: number;
  clarityRating?: number;
  concisenessRating?: number;
  readabilityRating?: number;
  onSubmit: Function;
  onClear: Function;
  canSubmit: boolean;
};

const Sidebar = ({
  percentGenerated = 0,
  formalityRating = 0,
  clarityRating = 0,
  concisenessRating = 0,
  readabilityRating = 0,
  onSubmit,
  onClear,
  canSubmit,
}: SidebarProps) => {
  const categories: Category[] = [
    { name: "Formality", percent: formalityRating, color: "blue" },
    { name: "Clarity", percent: clarityRating, color: "red" },
    { name: "Conciseness", percent: concisenessRating, color: "green" },
    { name: "Readability", percent: readabilityRating, color: "purple" },
  ];

  return (
    <>
      <div className="md:w-1/5 w-[90%] aspect-[1.75/2] shadow-xl bg-light rounded-lg flex flex-col items-center py-8 px-4">
        <div className="w-full flex items-center mb-4 rounded-lg p-1">
          <RadialProgress percent={percentGenerated} />
          <h1 className="text-lg font-bold text-center mt-4">
            likely to be generated by AI
          </h1>
        </div>
        <p className="text-center w-full text-sm text-grey">
          Your essay will not be deteched whatsoever.
        </p>
        <div className="flex flex-col w-full gap-4 mt-auto [&>*:nth-child(1)]:bg-blue-300 [&>*:nth-child(2)]:bg-indigo-300 [&>*:nth-child(3)]:bg-purple-300 [&>*:nth-child(4)]:bg-pink-300">
          {/* {categories.map((category: Category) => {
            return (
              <div
                className="w-full flex justify-between text-black shadow px-2 py-2 rounded-lg"
                key={category.name}
              >
                <p>{category.name}</p>
                <p className="font-bold">{category.percent}%</p>
              </div>
            );
          })} */}
        </div>
        <div className="flex flex-col gap-2 w-full mt-6">
          <Button
            text="Clear"
            className=" w-full"
            onClick={() => {
              onClear();
            }}
          />
          {canSubmit ? (
            <Button
              text="Rewrite"
              className="w-full"
              color="black"
              onClick={() => {
                onSubmit();
              }}
            />
          ) : (
            <Button
              text="Rewrite"
              className="w-full"
              color="black"
              loading
              onClick={() => {
                onSubmit();
              }}
            />
          )}
        </div>
      </div>
    </>
  );
};

export default Sidebar;
